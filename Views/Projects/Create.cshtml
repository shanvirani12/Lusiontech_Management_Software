@model Lusiontech_Management_Software.Models.Project

@{
    ViewData["Title"] = "Create Project";
}

<h1>Create Project</h1>

<h4>Project</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="bidSearch">Search Bid by Link</label>
                <input type="text" id="bidSearch" class="form-control" />
                <button type="button" onclick="searchBids()">Search</button>
            </div>
            <div class="form-group">
                <label asp-for="BidId" class="control-label"></label>
                <select id="bidSelect" asp-for="BidId" class="form-control">
                    <option value="">Select a bid</option>
                </select>
                <span asp-validation-for="BidId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function searchBids() {
                var query = document.getElementById("bidSearch").value;
                if (!query) {
                    alert("Please enter a search term.");
                    return;
                }
                fetch('/Projects/SearchBids?query=' + encodeURIComponent(query))
                    .then(response => response.json())
                    .then(data => {
                        var select = document.getElementById('bidSelect');
                        if (!select) {
                            console.error('Select element not found');
                            return;
                        }
                        select.innerHTML = ''; // Clear existing options
                        var defaultOption = document.createElement("option");
                        defaultOption.value = '';
                        defaultOption.text = 'Select a bid';
                        select.appendChild(defaultOption);
                        data.forEach(function (bid) {
                            var option = document.createElement("option");
                            option.value = bid.id;
                            option.text = `Link: ${bid.link}, Employee: ${bid.user}, Account: ${bid.account}`;
                            select.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error fetching bids:', error));
            }

            window.searchBids = searchBids; // Make searchBids function globally accessible
        });
    </script>
}
